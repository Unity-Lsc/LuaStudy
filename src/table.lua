---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by LSC.
--- DateTime: 2020/7/2 1:01
---
--table 分为了两部分
--lua没有数组,但是表可以代替数组的功能
local table_list = {0,1,2,3,4,5};
print(table_list[1]);--0

--lua表的连续索引的长度(数组部分) #表的名字  必须要求索引是连续的
print("表的长度:"..#table_list);--6
table_list[11] = 11;
print("表的长度:"..#table_list);--6  因为必须要求索引是连续的

table_list.test_key = "test_value";

--遍历lua里面的数组部分的数据
local index;
for index = 1,#table_list do
    print("遍历table_list:"..table_list[index]);
end

--ipairs遍历
local k,v;
for k,v in ipairs(table_list) do
    print("ipairs方法遍历表:",k,v);
end

--pairs遍历
for k,v in pairs(table_list) do
    print("pairs方法遍历表:",k,v);
end

--往数组部分里面插入一个元素
table.insert(table_list,2,66);--第二个参数为pos.如果不指定,默认会插入到数组部分的最后


--删除数组部分的一个元素(通过索引删除)
table.remove(table_list,2);

for k,v in ipairs(table_list) do
    print("ipairs方法遍历表:",k,v);
end

--表中元素的个数  数组部分(和#功能类似)
print("表中元素的个数:"..table.getn(table_list));

--对于table来说 如果table不是一个数组 那么就不能获取长度
tabletest = {a=1,b=2,c=3};
print(table.getn(tabletest));--0

--对表进行排序
local array_table = {3,6,1,9,5,8,7};
table.sort(array_table);
local index = 1;
for index = 1,#array_table do--从小到大排序
    print("从小到大排序后的array_table:"..array_table[index]);
end

--排序的比较函数(由大到小)
local function comp1(one,two)
    if one < two then
        return false;
    else
        return true;
    end
end

table.sort(array_table,comp1);
for index = 1,#array_table do--从小到大排序
    print("从大到小排序后的array_table:"..array_table[index]);
end

--随机打乱一个数组排序
local function upsetTable(arr)
    if type(arr) ~= "table" then
        return;
    end
    local tab = {};
    local index = 1;
    while #arr ~= 0 do
        local rand = math.random(0,#arr);
        if arr[rand] ~= nil then
            tab[index] = arr[rand];
            table.remove(arr,rand);
            index = index + 1;
        end
    end
    return tab;
end
local randomArr = upsetTable(array_table);

for index = 1,#randomArr do--从小到大排序
    print("随机排序后的array_table:"..randomArr[index]);
end
